name: Build, publish, and deploy a Dockerized Spring app to App Service
# example
on:
  push:
    branches:
      dockerized-jar

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      
    # Check out repo to the VM
    - uses: actions/checkout@v1
    
    # Maven build
    - name: Build and test with Maven
      run: mvn clean package
   
    # Unlike code deployment, you will authenticate using a Service Principal
    - uses: azure/actions/login@master
      with:
        creds: ${{ secrets.VISUAL_STUDIO_SUB_SP }}
    
    # Login to Docker
    - uses: azure/container-actions/docker-login@master
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
    # Tag the image with the git commit hash
    - run: |
        docker build . -t yutanglin16/dockerspringdemo:${{ github.sha }}
        docker push yutanglin16/dockerspringdemo:${{ github.sha }}

    # Finally, deploy the container to App Service
    - uses: azure/webapps-container-deploy@v1
      with:
        app-name: 'github-actions-java-dock-app'
        images: 'yutanglin16/dockerspringdemo:${{ github.sha }}'
